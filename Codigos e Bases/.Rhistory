# Additional attributes like size can be further specified in an analogous manner, either in advance or when the plot function is called:
V(rede_paises)$size <- degree(rede_paises)/500 #here the size of the vertices is specified by the degree of the vertex, so that people supervising more have get proportionally bigger dots. Getting the right scale gets some playing around with the parameters of the scale function (from the 'base' package)
# Note that if the same attribute is specified beforehand and inside the function, the former will be overridden.
# And finally the plot itself:
par(mai=c(0,0,1,0))   		#this specifies the size of the margins. the default settings leave too much free space on all sides (if no axes are printed)
plot(rede_paises,				#the graph to be plotted
layout=layout.fruchterman.reingold,	# the layout method. see the igraph documentation for details
main='Organizational network example',	#specifies the title
vertex.label.dist=0.5,			#puts the name labels slightly off the dots
vertex.frame.color='blue', 		#the color of the border of the dots
vertex.label.color='black',		#the color of the name labels
vertex.label.font=2,			#the font of the name labels
vertex.label=V(rede_paises)$name,		#specifies the lables of the vertices. in this case the 'name' attribute is used
vertex.label.cex=1			#specifies the size of the font of the labels. can also be made to vary
)
baixo_rel <- V(rede_paises)[degree(rede_paises) < 200] #identify those vertices part of less than three edges
rede_paises <- delete.vertices(rede_paises, baixo_rel) #exclude them from the graph
V(rede_paises)$color <- ifelse(V(rede_paises)$name=='Brasil', 'blue', 'black') #useful for highlighting certain people. Works by matching the name attribute of the vertex to the one specified in the 'ifelse' expression
# We can also color the connecting edges differently depending on the 'grade':
E(rede_paises)$color<-ifelse(E(rede_paises)$grade==20, "red", "black")
# or depending on the different specialization ('spec'):
# Additional attributes like size can be further specified in an analogous manner, either in advance or when the plot function is called:
V(rede_paises)$size <- degree(rede_paises)/500 #here the size of the vertices is specified by the degree of the vertex, so that people supervising more have get proportionally bigger dots. Getting the right scale gets some playing around with the parameters of the scale function (from the 'base' package)
# Note that if the same attribute is specified beforehand and inside the function, the former will be overridden.
# And finally the plot itself:
par(mai=c(0,0,1,0))   		#this specifies the size of the margins. the default settings leave too much free space on all sides (if no axes are printed)
plot(rede_paises,				#the graph to be plotted
layout=layout.fruchterman.reingold,	# the layout method. see the igraph documentation for details
main='Organizational network example',	#specifies the title
vertex.label.dist=0.5,			#puts the name labels slightly off the dots
vertex.frame.color='blue', 		#the color of the border of the dots
vertex.label.color='black',		#the color of the name labels
vertex.label.font=2,			#the font of the name labels
vertex.label=V(rede_paises)$name,		#specifies the lables of the vertices. in this case the 'name' attribute is used
vertex.label.cex=1			#specifies the size of the font of the labels. can also be made to vary
)
relacoes <- read.csv("redes_complexas2.txt",sep='|')
rede_paises <- graph.data.frame(relacoes, directed=F)
V(rede_paises) #prints the list of vertices (people)
E(rede_paises) #prints the list of edges (relationships)
degree(rede_paises) #print the number of edges per vertex (relationships per people)
plot(rede_paises)
# we can exclude the by subsetting the graph on the basis of the 'degree':
baixo_rel <- V(rede_paises)[degree(rede_paises) < 200] #identify those vertices part of less than three edges
rede_paises <- delete.vertices(rede_paises, baixo_rel) #exclude them from the graph
# Plot the data.Some details about the graph can be specified in advance.
# For example we can separate some vertices (people) by color:
V(rede_paises)$color <- ifelse(V(rede_paises)$name=='Brasil', 'blue', 'black') #useful for highlighting certain people. Works by matching the name attribute of the vertex to the one specified in the 'ifelse' expression
# We can also color the connecting edges differently depending on the 'grade':
E(rede_paises)$color<-ifelse(E(rede_paises)$grade==20, "red", "black")
# or depending on the different specialization ('spec'):
# Additional attributes like size can be further specified in an analogous manner, either in advance or when the plot function is called:
V(rede_paises)$size <- degree(rede_paises)/500 #here the size of the vertices is specified by the degree of the vertex, so that people supervising more have get proportionally bigger dots. Getting the right scale gets some playing around with the parameters of the scale function (from the 'base' package)
# Note that if the same attribute is specified beforehand and inside the function, the former will be overridden.
# And finally the plot itself:
par(mai=c(0,0,1,0))   		#this specifies the size of the margins. the default settings leave too much free space on all sides (if no axes are printed)
plot(rede_paises,				#the graph to be plotted
layout=layout.fruchterman.reingold,	# the layout method. see the igraph documentation for details
main='Organizational network example',	#specifies the title
vertex.label.dist=0.5,			#puts the name labels slightly off the dots
vertex.frame.color='blue', 		#the color of the border of the dots
vertex.label.color='black',		#the color of the name labels
vertex.label.font=2,			#the font of the name labels
vertex.label=V(rede_paises)$name,		#specifies the lables of the vertices. in this case the 'name' attribute is used
vertex.label.cex=1			#specifies the size of the font of the labels. can also be made to vary
)
relacoes <- read.csv("redes_complexas2.txt",sep='|')
rede_paises <- graph.data.frame(relacoes, directed=F)
V(rede_paises) #prints the list of vertices (people)
E(rede_paises) #prints the list of edges (relationships)
degree(rede_paises) #print the number of edges per vertex (relationships per people)
plot(rede_paises)
# we can exclude the by subsetting the graph on the basis of the 'degree':
baixo_rel <- V(rede_paises)[degree(rede_paises) < 200] #identify those vertices part of less than three edges
rede_paises <- delete.vertices(rede_paises, baixo_rel) #exclude them from the graph
# Plot the data.Some details about the graph can be specified in advance.
# For example we can separate some vertices (people) by color:
V(rede_paises)$color <- ifelse(V(rede_paises)$name=='Brasil', 'blue', 'black') #useful for highlighting certain people. Works by matching the name attribute of the vertex to the one specified in the 'ifelse' expression
# We can also color the connecting edges differently depending on the 'grade':
E(rede_paises)$color<-ifelse(E(rede_paises)$grade==20, "red", "black")
# or depending on the different specialization ('spec'):
# Additional attributes like size can be further specified in an analogous manner, either in advance or when the plot function is called:
V(rede_paises)$size <- degree(rede_paises)/500 #here the size of the vertices is specified by the degree of the vertex, so that people supervising more have get proportionally bigger dots. Getting the right scale gets some playing around with the parameters of the scale function (from the 'base' package)
# Note that if the same attribute is specified beforehand and inside the function, the former will be overridden.
# And finally the plot itself:
par(mai=c(0,0,1,0))   		#this specifies the size of the margins. the default settings leave too much free space on all sides (if no axes are printed)
plot(rede_paises,				#the graph to be plotted
layout=layout.fruchterman.reingold,	# the layout method. see the igraph documentation for details
main='Organizational network example',	#specifies the title
vertex.label.dist=0.5,			#puts the name labels slightly off the dots
vertex.frame.color='blue', 		#the color of the border of the dots
vertex.label.color='black',		#the color of the name labels
vertex.label.font=2,			#the font of the name labels
vertex.label=V(rede_paises)$name,		#specifies the lables of the vertices. in this case the 'name' attribute is used
vertex.label.cex=1			#specifies the size of the font of the labels. can also be made to vary
)
plot(g, edge.width=V(rede_paises)[degree(rede_paises))
plot(g, edge.width=V(rede_paises)[degree(rede_paises)])
relacoes <- read.csv("redes_complexas2.txt",sep='|')
g <- graph.data.frame(relations, directed=TRUE)
plot(g, edge.width=V(rede_paises)[degree(rede_paises)])
g <- graph.data.frame(relations, directed=TRUE)
plot(g, edge.width=V(g)[degree(g)])
relacoes <- read.csv("redes2.txt",sep='|')
relacoes <- read.csv("redes.txt",sep='|')
g <- graph.data.frame(relations, directed=TRUE)
plot(g, edge.width=V(g)[degree(g)])
g <- graph.data.frame(relations, directed=TRUE)
plot(g, edge.width=E(g)$W)
g <- graph.data.frame(relations, directed=TRUE)
relacoes <- read.csv("redes.txt",sep='|')
rede_paises <- graph.data.frame(relacoes, directed=F)
V(rede_paises) #prints the list of vertices (people)
E(rede_paises) #prints the list of edges (relationships)
degree(rede_paises) #print the number of edges per vertex (relationships per people)
g <- graph.data.frame(relations, directed=TRUE)
plot(g, edge.width=E(g)$W)
relacoes <- read.csv("redes_complexas2.txt",sep='|')
rede_paises <- graph.data.frame(relacoes, directed=F)
V(rede_paises) #prints the list of vertices (people)
E(rede_paises) #prints the list of edges (relationships)
degree(rede_paises) #print the number of edges per vertex (relationships per people)
plot(rede_paises)
baixo_rel <- V(rede_paises)[degree(rede_paises) < 200] #identify those vertices part of less than three edges
rede_paises <- delete.vertices(rede_paises, baixo_rel) #exclude them from the graph
V(rede_paises)$color <- ifelse(V(rede_paises)$name=='Brasil', 'blue', 'black') #useful for highlighting certain people. Works by matching the name attribute of the vertex to the one specified in the 'ifelse' expression
E(rede_paises)$color<-ifelse(E(rede_paises)$grade==20, "red", "black")
par(mai=c(0,0,1,0))   		#this specifies the size of the margins. the default settings leave too much free space on all sides (if no axes are printed)
plot(rede_paises,				#the graph to be plotted
layout=layout.fruchterman.reingold,	# the layout method. see the igraph documentation for details
main='Organizational network example',	#specifies the title
vertex.label.dist=0.5,			#puts the name labels slightly off the dots
vertex.frame.color='blue', 		#the color of the border of the dots
vertex.label.color='black',		#the color of the name labels
vertex.label.font=2,			#the font of the name labels
vertex.label=V(rede_paises)$name,		#specifies the lables of the vertices. in this case the 'name' attribute is used
vertex.label.cex=1			#specifies the size of the font of the labels. can also be made to vary
)
par(mai=c(0,0,1,0))   		#this specifies the size of the margins. the default settings leave too much free space on all sides (if no axes are printed)
plot(rede_paises,				#the graph to be plotted
layout=layout.fruchterman.reingold,	# the layout method. see the igraph documentation for details
main='Organizational network example',	#specifies the title
vertex.label.dist=0.8,			#puts the name labels slightly off the dots
vertex.frame.color='black', 		#the color of the border of the dots
vertex.label.color='black',		#the color of the name labels
vertex.label.font=2,			#the font of the name labels
vertex.label=V(rede_paises)$name,		#specifies the lables of the vertices. in this case the 'name' attribute is used
vertex.label.cex=1			#specifies the size of the font of the labels. can also be made to vary
)
vertex.label.dist = 1,			#puts the name labels slightly off the dots
vertex.label.dist = 1.0,			#puts the name labels slightly off the dots
par(mai=c(0,0,1,0))   		#this specifies the size of the margins. the default settings leave too much free space on all sides (if no axes are printed)
plot(rede_paises,				#the graph to be plotted
layout=layout.fruchterman.reingold,	# the layout method. see the igraph documentation for details
main='Organizational network example',	#specifies the title
vertex.label.dist = 1.0,			#puts the name labels slightly off the dots
vertex.frame.color='black', 		#the color of the border of the dots
vertex.label.color='black',		#the color of the name labels
vertex.label.font=2,			#the font of the name labels
vertex.label=V(rede_paises)$name,		#specifies the lables of the vertices. in this case the 'name' attribute is used
vertex.label.cex=1			#specifies the size of the font of the labels. can also be made to vary
)
par(mai=c(0,0,1,0))   		#this specifies the size of the margins. the default settings leave too much free space on all sides (if no axes are printed)
plot(rede_paises,				#the graph to be plotted
layout=layout.fruchterman.reingold,	# the layout method. see the igraph documentation for details
main='Organizational network example',	#specifies the title
vertex.label.dist = 1.4,			#puts the name labels slightly off the dots
vertex.frame.color='black', 		#the color of the border of the dots
vertex.label.color='black',		#the color of the name labels
vertex.label.font=2,			#the font of the name labels
vertex.label=V(rede_paises)$name,		#specifies the lables of the vertices. in this case the 'name' attribute is used
vertex.label.cex=1			#specifies the size of the font of the labels. can also be made to vary
)
E(rede_paises)
baixo_rel <- V(rede_paises)[degree(rede_paises) < 200]
rede_paises <- delete.vertices(rede_paises, baixo_rel)
#Evidenciando conexões com o Brasil
V(rede_paises)$color <- ifelse(
V(rede_paises)$name=='Brasil',
'blue', 'black'
)
plot(rede_paises,				#the graph to be plotted
layout=layout.fruchterman.reingold,	# the layout method. see the igraph documentation for details
main='Organizational network example',	#specifies the title
vertex.label.dist = 1.4,			#puts the name labels slightly off the dots
vertex.frame.color='black', 		#the color of the border of the dots
vertex.label.color='black',		#the color of the name labels
vertex.label.font=2,			#the font of the name labels
vertex.label=V(rede_paises)$name,		#specifies the lables of the vertices. in this case the 'name' attribute is used
vertex.label.cex=1			#specifies the size of the font of the labels. can also be made to vary
)
baixo_rel <- V(rede_paises)[degree(rede_paises) < 100]
rede_paises <- delete.vertices(rede_paises, baixo_rel)
#Evidenciando conexões com o Brasil
V(rede_paises)$color <- ifelse(
V(rede_paises)$name=='Brasil',
'blue', 'black'
)
plot(rede_paises,				#the graph to be plotted
layout=layout.fruchterman.reingold,	# the layout method. see the igraph documentation for details
main='Organizational network example',	#specifies the title
vertex.label.dist = 1.4,			#puts the name labels slightly off the dots
vertex.frame.color='black', 		#the color of the border of the dots
vertex.label.color='black',		#the color of the name labels
vertex.label.font=2,			#the font of the name labels
vertex.label=V(rede_paises)$name,		#specifies the lables of the vertices. in this case the 'name' attribute is used
vertex.label.cex=1			#specifies the size of the font of the labels. can also be made to vary
)
baixo_rel <- V(rede_paises)[degree(rede_paises) < 10]
rede_paises <- delete.vertices(rede_paises, baixo_rel)
#Evidenciando conexões com o Brasil
V(rede_paises)$color <- ifelse(
V(rede_paises)$name=='Brasil',
'blue', 'black'
)
plot(rede_paises,				#the graph to be plotted
layout=layout.fruchterman.reingold,	# the layout method. see the igraph documentation for details
vertex.label.dist = 1.4,			#puts the name labels slightly off the dots
vertex.frame.color='black', 		#the color of the border of the dots
vertex.label.color='black',		#the color of the name labels
main='Organizational network example',	#specifies the title
vertex.label=V(rede_paises)$name,		#specifies the lables of the vertices. in this case the 'name' attribute is used
vertex.label.font=2,			#the font of the name labels
vertex.label.cex=1			#specifies the size of the font of the labels. can also be made to vary
)
V(rede_paises)$size <- degree(rede_paises)/500 #here the size of the vertices is specified by the degree of the vertex, so that people supervising more have get proportionally bigger dots. Getting the right scale gets some playing around with the parameters of the scale function (from the 'base' package)
par(mai=c(0,0,1,0))   		#this specifies the size of the margins. the default settings leave too much free space on all sides (if no axes are printed)
plot(rede_paises,				#the graph to be plotted
layout=layout.fruchterman.reingold,	# the layout method. see the igraph documentation for details
main='Organizational network example',	#specifies the title
vertex.label.dist = 1.4,			#puts the name labels slightly off the dots
vertex.frame.color='black', 		#the color of the border of the dots
vertex.label.color='black',		#the color of the name labels
vertex.label.font=2,			#the font of the name labels
vertex.label=V(rede_paises)$name,		#specifies the lables of the vertices. in this case the 'name' attribute is used
vertex.label.cex=1			#specifies the size of the font of the labels. can also be made to vary
)
baixo_rel <- V(rede_paises)[degree(rede_paises) < 200]
relacoes <- read.csv("redes_complexas2.txt",sep='|')
rede_paises <- graph.data.frame(relacoes, directed=F)
#Lista de vértices
V(rede_paises)
#Lista de nós
E(rede_paises)
#Número de relacionamentos
degree(rede_paises)
baixo_rel <- V(rede_paises)[degree(rede_paises) < 200]
rede_paises <- delete.vertices(rede_paises, baixo_rel)
V(rede_paises)$color <- ifelse(
V(rede_paises)$name=  ='Brasil',
'blue', 'black'
)
# Additional attributes like size can be further specified in an analogous manner, either in advance or when the plot function is called:
V(rede_paises)$size <- degree(rede_paises)/500 #here the size of the vertices is specified by the degree of the vertex, so that people supervising more have get proportionally bigger dots. Getting the right scale gets some playing around with the parameters of the scale function (from the 'base' package)
# Note that if the same attribute is specified beforehand and inside the function, the former will be overridden.
# And finally the plot itself:
par(mai=c(0,0,1,0))   		#this specifies the size of the margins. the default settings leave too much free space on all sides (if no axes are printed)
plot(rede_paises,				#the graph to be plotted
layout=layout.fruchterman.reingold,	# the layout method. see the igraph documentation for details
main='Organizational network example',	#specifies the title
vertex.label.dist = 1.4,			#puts the name labels slightly off the dots
vertex.frame.color='black', 		#the color of the border of the dots
vertex.label.color='black',		#the color of the name labels
vertex.label.font=2,			#the font of the name labels
vertex.label=V(rede_paises)$name,		#specifies the lables of the vertices. in this case the 'name' attribute is used
vertex.label.cex=1			#specifies the size of the font of the labels. can also be made to vary
)
V(rede_paises)$color <- ifelse(
V(rede_paises)$name=  ='Brasil',
'blue', 'black'
)
V(rede_paises)$color <- ifelse(
V(rede_paises)$name=  ='Brasil',
'blue', 'black'
)
V(rede_paises)$color <- ifelse(
V(rede_paises)$name=  ='Brasil',
'blue', 'black'
V(rede_paises)$color <- ifelse(
V(rede_paises)$name=  ='Brasil',
V(rede_paises)$color <- ifelse(
V(rede_paises)$name=='Brasil',
'blue', 'black'
)
V(rede_paises)$size <- degree(rede_paises)/500 #here the size of the vertices is specified by the degree of the vertex, so that people supervising more have get proportionally bigger dots. Getting the right scale gets some playing around with the parameters of the scale function (from the 'base' package)
V(rede_paises)$size <- degree(rede_paises)/10
par(mai=c(0,0,1,0))   		#this specifies the size of the margins. the default settings leave too much free space on all sides (if no axes are printed)
plot(rede_paises,				#the graph to be plotted
layout=layout.fruchterman.reingold,	# the layout method. see the igraph documentation for details
main='Organizational network example',	#specifies the title
vertex.label.dist = 1.4,			#puts the name labels slightly off the dots
vertex.frame.color='black', 		#the color of the border of the dots
vertex.label.color='black',		#the color of the name labels
vertex.label.font=2,			#the font of the name labels
vertex.label=V(rede_paises)$name,		#specifies the lables of the vertices. in this case the 'name' attribute is used
vertex.label.cex=1			#specifies the size of the font of the labels. can also be made to vary
)
V(rede_paises)$size <- degree(rede_paises)/100
par(mai=c(0,0,1,0))   		#this specifies the size of the margins. the default settings leave too much free space on all sides (if no axes are printed)
plot(rede_paises,				#the graph to be plotted
layout=layout.fruchterman.reingold,	# the layout method. see the igraph documentation for details
main='Organizational network example',	#specifies the title
vertex.label.dist = 1.4,			#puts the name labels slightly off the dots
vertex.frame.color='black', 		#the color of the border of the dots
vertex.label.color='black',		#the color of the name labels
vertex.label.font=2,			#the font of the name labels
vertex.label=V(rede_paises)$name,		#specifies the lables of the vertices. in this case the 'name' attribute is used
vertex.label.cex=1			#specifies the size of the font of the labels. can also be made to vary
)
plot(rede_paises,
layout=layout.fruchterman.reingold,
main='Organizational network example',
vertex.label.dist = 1.4,
vertex.frame.color='black',
vertex.label.color='black',
vertex.label.font=2,
vertex.label=V(rede_paises)$name,
vertex.label.cex=1
)
baixo_rel <- V(rede_paises)[degree(rede_paises) < 100]
rede_paises <- delete.vertices(rede_paises, baixo_rel)
V(rede_paises)$name=='Brasil',
V(rede_paises)$color <- ifelse(
'blue', 'black'
)
V(rede_paises)$size <- degree(rede_paises)/50
#Plotando novamente
layout=layout.fruchterman.reingold,
main='Organizational network example',
vertex.label.dist = 1.4,
vertex.label.font=2,
plot(rede_paises,
vertex.frame.color='black',
#Ajusta o tamanho dos vértices
vertex.label.color='black',
vertex.label=V(rede_paises)$name,
vertex.label.cex=1
)
plot(rede_paises,
layout=layout.fruchterman.reingold,
main='Organizational network example',
vertex.label.dist = 1.4,
vertex.frame.color='black',
vertex.label.color='black',
vertex.label.font=2,
vertex.label=V(rede_paises)$name,
vertex.label.cex=1
)
V(rede_paises)$color <- ifelse(
V(rede_paises)$name=='Brasil',
'blue', 'black'
)
V(rede_paises)$size <- degree(rede_paises)/50
plot(rede_paises,
layout=layout.fruchterman.reingold,
main='Organizational network example',
vertex.label.dist = 1.4,
vertex.frame.color='black',
vertex.label.color='black',
vertex.label.font=2,
vertex.label=V(rede_paises)$name,
vertex.label.cex=1
)
V(rede_paises)$color <- ifelse(
V(rede_paises)$name=='Brasil',
'blue', 'red'
)
#Ajusta o tamanho dos vértices
V(rede_paises)$size <- degree(rede_paises)/20
#Plotando novamente
plot(rede_paises,
layout=layout.fruchterman.reingold,
main='Organizational network example',
vertex.label.dist = 1.4,
vertex.frame.color='black',
vertex.label.color='black',
vertex.label.font=2,
vertex.label=V(rede_paises)$name,
vertex.label.cex=1
)
library(igraph)
relacoes <- read.csv("redes_complexas2.txt",sep='|')
rede_paises <- graph.data.frame(relacoes, directed=F)
#Lista de vértices
V(rede_paises)
#Lista de nós
E(rede_paises)
#Número de relacionamentos
degree(rede_paises)
plot(rede_paises)
#Excluindo conexões pequenas
baixo_rel <- V(rede_paises)[degree(rede_paises) < 100]
rede_paises <- delete.vertices(rede_paises, baixo_rel)
V(rede_paises)$color <- ifelse(
V(rede_paises)$name=='Brasil',
'blue', 'red'
)
#Ajusta o tamanho dos vértices
V(rede_paises)$size <- degree(rede_paises)/20
#Plotando novamente
plot(rede_paises,
layout=layout.fruchterman.reingold,
main='Relacionamento entre os países',
vertex.label.dist = 1.6,
vertex.frame.color='black',
vertex.label.color='black',
vertex.label.font=2,
vertex.label=V(rede_paises)$name,
vertex.label.cex=1
)
setwd("C:/Users/Leandro/Google Drive/FMU")
library(manipulate)
manipulate(
plot(1:x, xlab = 'Eixo X',
ylab = 'Eixo Y',
main = 'Exemplo - Manipulate'),
x = slider(1, 60)
)
library("quantmod")
dataInicial = as.Date("2014-10-01")
dataFinal = as.Date("2015-03-20")
#Seleção das ações
tickers <- c("GOOG","PETR4.SA","^BVSP","BBDC4.SA")
#Download dos dados
getSymbols(tickers, src = "yahoo", from = dataInicial, to = dataFinal)
save(BBDC4.SA, file="BBDC4.SA.RData")
save(BBDC4.SA, file="BBDC4.SA.RData")
save(BVSP, file="BVSP.RData")
save(PETR4.SA, file="PETR4.SA.RData")
save(GOOG, file="GOOG.RData")
data(cars)
manipulate(
plot(cars, xlim=c(x.min,x.max),
xlab = 'Velocidade',
ylab = 'Distância',
main = 'Múltiplos Sliders'),
x.min=slider(0,20),
x.max=slider(20,40))
#Avaliando um histograma
library(UsingR)
data(galton)
meuHist <- function(mu) {
hist(galton$child, col = "red", breaks = 100,
main = 'Histograma',
ylab='Frequencia',
xlab='Altura')
lines(c(mu, mu), c(0, 150), col = "green", lwd = 5)
mse <- mean((galton$child - mu)^2)
text(63, 150, paste("mu = ", mu))
text(66, 150, paste("MSE = ", round(mse, 2)))
}
manipulate(meuHist(mu), mu = slider(62, 74, step = 1))
manipulate(
barplot(as.matrix(longley[,factor]),
beside = TRUE, main = factor),
factor = picker("GNP", "Unemployed", "Employed"))
manipulate(
{
if(reset)
set.seed(sample(1:1000))
hist(rnorm(n=100, mean=0, sd=3), breaks=bins)
},
bins = slider(1, 20, step=1, initial =5, label="Bins"),
reset = button("Reiniciar Seed")
)
PETR4 <- data.frame(PETR4.SA)
GOOGLE <- data.frame(GOOG)
IBOVESPA <- data.frame(BVSP)
BBDC4 <- data.frame(BBDC4.SA)
manipulate(
candleChart(get(factor)),
factor = picker('PETR4','GOOGLE','IBOVESPA','BBDC4')
)
library(rCharts)
## Iris dataset
names(iris) = gsub("\\.", "", names(iris))
rPlot(SepalLength ~ SepalWidth | Species,
data = iris, color = 'Species', type = 'point')
## Gráficos de barras
hair_eye = as.data.frame(HairEyeColor)
rPlot(Freq ~ Hair | Eye, color = 'Eye', data = hair_eye, type = 'bar')
library(igraph)
relacoes <- read.csv("redes_complexas2.txt",sep='|')
rede_paises <- graph.data.frame(relacoes, directed=F)
#Lista de vértices
V(rede_paises)
#Lista de nós
E(rede_paises)
#Número de relacionamentos
degree(rede_paises)
plot(rede_paises)
#Excluindo conexões pequenas
baixo_rel <- V(rede_paises)[degree(rede_paises) < 100]
rede_paises <- delete.vertices(rede_paises, baixo_rel)
V(rede_paises)$color <- ifelse(
V(rede_paises)$name=='Brasil',
'blue', 'red'
)
#Ajusta o tamanho dos vértices
V(rede_paises)$size <- degree(rede_paises)/20
#Plotando novamente
plot(rede_paises,
layout=layout.fruchterman.reingold,
main='Relacionamento entre os países',
vertex.label.dist = 1.6,
vertex.frame.color='black',
vertex.label.color='black',
vertex.label.font=2,
vertex.label=V(rede_paises)$name,
vertex.label.cex=1
)
save.image("C:/Users/Leandro/Google Drive/FMU/interactive.RData")
